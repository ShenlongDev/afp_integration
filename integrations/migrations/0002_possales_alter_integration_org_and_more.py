# Generated by Django 4.2 on 2025-04-21 14:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        ('integrations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='POSSales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('date_ntz', models.DateTimeField(blank=True, null=True)),
                ('staff_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sales_area', models.CharField(blank=True, max_length=255, null=True)),
                ('service', models.CharField(blank=True, max_length=255, null=True)),
                ('sale_type', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, max_length=3, null=True)),
                ('net_amount', models.FloatField(blank=True, null=True)),
                ('gross_amount', models.FloatField(blank=True, null=True)),
                ('tax', models.FloatField(blank=True, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('gratuity', models.FloatField(blank=True, null=True)),
                ('refund', models.FloatField(blank=True, null=True)),
                ('void', models.BooleanField(blank=True, null=True)),
                ('item_type', models.CharField(blank=True, max_length=255, null=True)),
                ('item_category', models.CharField(blank=True, max_length=255, null=True)),
                ('item_product_name', models.CharField(blank=True, max_length=255, null=True)),
                ('item_quantity', models.FloatField(blank=True, null=True)),
                ('item_variation', models.CharField(blank=True, max_length=255, null=True)),
                ('item_net_amount', models.FloatField(blank=True, null=True)),
                ('item_gross_amount', models.FloatField(blank=True, null=True)),
                ('item_tax', models.FloatField(blank=True, null=True)),
                ('item_line_discount', models.FloatField(blank=True, null=True)),
                ('item_refunded', models.BooleanField(blank=True, null=True)),
                ('item_index', models.DecimalField(blank=True, decimal_places=0, max_digits=38, null=True)),
                ('outlet_name', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('register_name', models.CharField(blank=True, max_length=255, null=True)),
                ('dining_options', models.CharField(blank=True, max_length=255, null=True)),
                ('covers', models.DecimalField(blank=True, decimal_places=0, max_digits=38, null=True)),
                ('receipt_no', models.CharField(blank=True, max_length=255, null=True)),
                ('checks', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('order_status', models.CharField(blank=True, max_length=255, null=True)),
                ('client_name', models.CharField(blank=True, max_length=255, null=True)),
                ('source_system', models.CharField(blank=True, max_length=255, null=True)),
                ('business_date', models.DateField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('opened', models.DateTimeField(blank=True, null=True)),
                ('paid', models.DateTimeField(blank=True, null=True)),
                ('closed', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('automation', models.CharField(blank=True, max_length=255, null=True)),
                ('item_voided', models.BooleanField(blank=True, null=True)),
                ('organization_id', models.DecimalField(blank=True, decimal_places=0, max_digits=38, null=True)),
                ('client_id', models.DecimalField(blank=True, decimal_places=0, max_digits=38, null=True)),
                ('site_id', models.DecimalField(blank=True, decimal_places=0, max_digits=38, null=True)),
                ('item_id', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name='integration',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='core.organisation'),
        ),
        migrations.AlterField(
            model_name='integration',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations_org', to='core.organisation'),
        ),
        migrations.AlterField(
            model_name='synctablelogs',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.organisation'),
        ),
        migrations.AlterField(
            model_name='xerobudgetperiodbalancesraw',
            name='tenant_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xero_budget_period_balances_raws', to='core.organisation'),
        ),
        migrations.AlterField(
            model_name='xerobudgetsraw',
            name='tenant_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xero_budgets_raws', to='core.organisation'),
        ),
        migrations.DeleteModel(
            name='Organisation',
        ),
        migrations.AddIndex(
            model_name='possales',
            index=models.Index(fields=['order_id', 'item_id'], name='integration_order_i_45da09_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='possales',
            unique_together={('order_id', 'item_id')},
        ),
    ]
