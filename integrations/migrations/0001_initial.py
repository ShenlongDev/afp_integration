# Generated by Django 4.2 on 2025-04-21 10:24

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HighPriorityTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_type', models.CharField(max_length=50)),
                ('since_date', models.DateField()),
                ('until_date', models.DateField(blank=True, null=True)),
                ('selected_modules', models.JSONField(blank=True, default=list)),
                ('processed', models.BooleanField(default=False)),
                ('in_progress', models.BooleanField(default=False)),
                ('in_progress_since', models.DateTimeField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_type', models.CharField(choices=[('toast', 'Toast'), ('xero', 'Xero'), ('netsuite', 'NetSuite'), ('other', 'Other')], default='toast', max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('settings', models.JSONField(blank=True, default=dict)),
                ('xero_client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('xero_client_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('netsuite_account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('netsuite_client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('netsuite_client_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('netsuite_consumer_key', models.CharField(blank=True, max_length=255, null=True)),
                ('netsuite_private_key', models.TextField(blank=True, null=True)),
                ('netsuite_certificate_id', models.CharField(blank=True, max_length=255, null=True)),
                ('toast_api_url', models.CharField(blank=True, max_length=100, null=True)),
                ('toast_client_id', models.CharField(blank=True, max_length=255, null=True)),
                ('toast_client_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Integrations',
            },
        ),
        migrations.CreateModel(
            name='IntegrationAccessToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_type', models.CharField(choices=[('XERO', 'Xero'), ('NETSUITE', 'NetSuite'), ('TOAST', 'Toast'), ('OTHER', 'Other')], default='XERO', max_length=50)),
                ('token', models.TextField()),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteAccountingPeriods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('period_id', models.CharField(max_length=255, null=True)),
                ('period_name', models.CharField(max_length=255, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('closed', models.BooleanField(null=True)),
                ('all_locked', models.BooleanField(null=True)),
                ('fiscal_calendar', models.CharField(max_length=255, null=True)),
                ('year', models.IntegerField(null=True)),
                ('quarter', models.IntegerField(null=True)),
                ('period', models.IntegerField(null=True)),
                ('record_date', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('account_id', models.IntegerField(db_index=True, null=True)),
                ('links', models.TextField(blank=True, null=True)),
                ('accountsearchdisplayname', models.TextField(blank=True, null=True)),
                ('accountsearchdisplaynamecopy', models.TextField(blank=True, null=True)),
                ('acctnumber', models.TextField(blank=True, null=True)),
                ('accttype', models.TextField(blank=True, null=True)),
                ('balance', models.TextField(blank=True, null=True)),
                ('displaynamewithhierarchy', models.TextField(blank=True, null=True)),
                ('eliminate', models.TextField(blank=True, null=True)),
                ('externalid', models.TextField(blank=True, null=True)),
                ('fullname', models.TextField(blank=True, null=True)),
                ('include_children', models.TextField(blank=True, null=True)),
                ('inventory', models.TextField(blank=True, null=True)),
                ('is_inactive', models.TextField(blank=True, null=True)),
                ('is_summary', models.TextField(blank=True, null=True)),
                ('last_modified_date', models.TextField(blank=True, null=True)),
                ('reconcile_with_matching', models.TextField(blank=True, null=True)),
                ('revalue', models.TextField(blank=True, null=True)),
                ('subsidiary', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('parent', models.TextField(blank=True, null=True)),
                ('department', models.TextField(blank=True, null=True)),
                ('sspecacct', models.TextField(blank=True, null=True)),
                ('custrecord_rpc_model_cat_group', models.TextField(blank=True, null=True)),
                ('custrecord_rpc_model_category_sub', models.TextField(blank=True, null=True)),
                ('custrecord3', models.TextField(blank=True, null=True)),
                ('consolidation_key', models.CharField(max_length=255, null=True)),
                ('record_date', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteBudgetPeriodBalances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('budget_id', models.CharField(max_length=255, null=True)),
                ('budget_name', models.CharField(max_length=255, null=True)),
                ('budget_status', models.CharField(max_length=255, null=True)),
                ('budget_type', models.CharField(max_length=255, null=True)),
                ('account_id', models.CharField(max_length=255, null=True)),
                ('account_code', models.CharField(max_length=255, null=True)),
                ('account_name', models.CharField(max_length=255, null=True)),
                ('account_class', models.CharField(max_length=50, null=True)),
                ('department', models.CharField(max_length=255, null=True)),
                ('location', models.CharField(max_length=255, null=True)),
                ('period', models.CharField(max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=19, null=True)),
                ('notes', models.TextField(null=True)),
                ('updated_date_utc', models.DateTimeField(null=True)),
                ('ingestion_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('source_system', models.CharField(default='NETSUITE', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteBudgets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('budget_id', models.CharField(max_length=255, null=True)),
                ('account_id', models.CharField(max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('fiscal_year', models.IntegerField(null=True)),
                ('period', models.IntegerField(null=True)),
                ('last_modified_date', models.DateTimeField(null=True)),
                ('record_date', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteDepartments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('department_id', models.CharField(max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('subsidiary', models.CharField(max_length=255, null=True)),
                ('is_inactive', models.BooleanField(null=True)),
                ('record_date', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteEntity',
            fields=[
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('company_display_name', models.CharField(max_length=255, null=True)),
                ('entity_id', models.CharField(max_length=255, null=True)),
                ('entity_title', models.CharField(max_length=255, null=True)),
                ('type', models.CharField(max_length=255, null=True)),
                ('legal_name', models.CharField(max_length=255, null=True)),
                ('external_id', models.CharField(max_length=255, null=True)),
                ('is_person', models.BooleanField(null=True)),
                ('is_inactive', models.BooleanField(null=True)),
                ('parent_entity', models.CharField(max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('phone', models.CharField(max_length=255, null=True)),
                ('currency', models.CharField(max_length=3, null=True)),
                ('subsidiary', models.CharField(max_length=255, null=True)),
                ('terms', models.CharField(max_length=255, null=True)),
                ('last_modified_date', models.DateTimeField(null=True)),
                ('record_date', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteJournals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('journal_id', models.CharField(db_index=True, max_length=255, null=True)),
                ('date', models.DateField(db_index=True, null=True)),
                ('memo', models.TextField(null=True)),
                ('account', models.CharField(max_length=255, null=True)),
                ('debit', models.DecimalField(decimal_places=2, max_digits=19, null=True)),
                ('credit', models.DecimalField(decimal_places=2, max_digits=19, null=True)),
                ('currency', models.CharField(max_length=3, null=True)),
                ('exchangerate', models.DecimalField(decimal_places=6, max_digits=19, null=True)),
                ('record_date', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteLocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('location_id', models.CharField(max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('external_id', models.CharField(max_length=255, null=True)),
                ('include_children', models.BooleanField(null=True)),
                ('is_inactive', models.BooleanField(null=True)),
                ('main_address', models.CharField(max_length=255, null=True)),
                ('subsidiary', models.CharField(max_length=255, null=True)),
                ('parent', models.CharField(max_length=255, null=True)),
                ('last_modified_date', models.DateTimeField(null=True)),
                ('record_date', models.DateTimeField(null=True)),
                ('consolidation_key', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteSubsidiaries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('subsidiary_id', models.CharField(max_length=255, null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('name_nohi', models.CharField(max_length=255, null=True)),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('legal_name', models.CharField(max_length=255, null=True)),
                ('federal_number', models.CharField(max_length=255, null=True)),
                ('is_elimination', models.BooleanField(null=True)),
                ('currency', models.CharField(max_length=3, null=True)),
                ('country', models.CharField(max_length=255, null=True)),
                ('record_date', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteTransactionAccountingLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('links', models.TextField(blank=True, null=True)),
                ('accountingbook', models.TextField(blank=True, null=True)),
                ('posting', models.TextField(blank=True, null=True)),
                ('processedbyrevcommit', models.TextField(blank=True, null=True)),
                ('account', models.IntegerField(blank=True, db_index=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('amountlinked', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('debit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('netamount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('paymentamountunused', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('paymentamountused', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('credit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('amountpaid', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('amountunpaid', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('transaction', models.IntegerField(blank=True, db_index=True, null=True)),
                ('transaction_line', models.IntegerField(blank=True, db_index=True, null=True)),
                ('lastmodifieddate', models.DateTimeField(blank=True, null=True)),
                ('consolidation_key', models.CharField(max_length=255, null=True)),
                ('source_uri', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteTransactionLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_line_id', models.BigIntegerField(blank=True, null=True)),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('unique_key', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('links', models.TextField(blank=True, null=True)),
                ('accountinglinetype', models.TextField(blank=True, null=True)),
                ('cleared', models.TextField(blank=True, null=True)),
                ('commitmentfirm', models.TextField(blank=True, null=True)),
                ('old_commitment_firm', models.TextField(blank=True, null=True)),
                ('department', models.TextField(blank=True, null=True)),
                ('departmentid', models.BigIntegerField(blank=True, null=True)),
                ('donotdisplayline', models.TextField(blank=True, null=True)),
                ('eliminate', models.TextField(blank=True, null=True)),
                ('entity', models.TextField(blank=True, null=True)),
                ('entityid', models.BigIntegerField(blank=True, null=True)),
                ('expenseaccount', models.TextField(blank=True, null=True)),
                ('expenseaccountid', models.BigIntegerField(blank=True, null=True)),
                ('foreignamount', models.FloatField(blank=True, null=True)),
                ('foreignamountpaid', models.FloatField(blank=True, null=True)),
                ('foreignamountunpaid', models.FloatField(blank=True, null=True)),
                ('is_billable', models.CharField(blank=True, max_length=50, null=True)),
                ('is_closed', models.CharField(blank=True, max_length=50, null=True)),
                ('is_cogs', models.CharField(blank=True, max_length=50, null=True)),
                ('is_custom_gl_line', models.CharField(blank=True, max_length=50, null=True)),
                ('is_fully_shipped', models.CharField(blank=True, max_length=50, null=True)),
                ('is_fx_variance', models.CharField(blank=True, max_length=50, null=True)),
                ('is_inventory_affecting', models.CharField(blank=True, max_length=50, null=True)),
                ('is_rev_rec_transaction', models.CharField(blank=True, max_length=50, null=True)),
                ('line_last_modified_date', models.DateField(blank=True, null=True)),
                ('line_sequence_number', models.IntegerField(blank=True, null=True)),
                ('main_line', models.CharField(blank=True, max_length=50, null=True)),
                ('match_bill_to_receipt', models.CharField(blank=True, max_length=50, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('net_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('quantity_billed', models.FloatField(blank=True, null=True)),
                ('quantity_rejected', models.FloatField(blank=True, null=True)),
                ('quantity_ship_recv', models.FloatField(blank=True, null=True)),
                ('subsidiary', models.TextField(blank=True, null=True)),
                ('subsidiaryid', models.BigIntegerField(blank=True, null=True)),
                ('tax_line', models.TextField(blank=True, null=True)),
                ('transactionid', models.BigIntegerField(blank=True, null=True)),
                ('transaction_discount', models.TextField(blank=True, null=True)),
                ('uniquekey', models.BigIntegerField(blank=True, null=True)),
                ('creditforeignamount', models.FloatField(blank=True, null=True)),
                ('closedate', models.DateField(blank=True, null=True)),
                ('documentnumber', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('class_field', models.TextField(blank=True, null=True)),
                ('consolidation_key', models.CharField(max_length=255, null=True)),
                ('source_uri', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteTransactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactionid', models.IntegerField(db_index=True, null=True)),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('lastmodifieddate', models.DateTimeField(blank=True, null=True)),
                ('links', models.TextField(blank=True, null=True)),
                ('abbrevtype', models.TextField(blank=True, null=True)),
                ('approvalstatus', models.TextField(blank=True, null=True)),
                ('balsegstatus', models.TextField(blank=True, null=True)),
                ('billingstatus', models.TextField(blank=True, null=True)),
                ('createdby', models.TextField(blank=True, null=True)),
                ('currency', models.TextField(blank=True, null=True)),
                ('custbody5', models.TextField(blank=True, null=True)),
                ('custbody_cash_register', models.TextField(blank=True, null=True)),
                ('custbody_nondeductible_processed', models.TextField(blank=True, null=True)),
                ('custbody_rpc_duplicate_bill_created', models.TextField(blank=True, null=True)),
                ('custbody_rpc_duplicate_bill_credit_crt', models.TextField(blank=True, null=True)),
                ('custbody_rpc_lightyear_bill', models.TextField(blank=True, null=True)),
                ('custbody_rpc_lightyear_bill_credit', models.TextField(blank=True, null=True)),
                ('custbody_wrong_subs', models.TextField(blank=True, null=True)),
                ('entity', models.TextField(blank=True, null=True)),
                ('externalid', models.TextField(blank=True, null=True)),
                ('foreigntotal', models.TextField(blank=True, null=True)),
                ('intercoadj', models.TextField(blank=True, null=True)),
                ('isfinchrg', models.TextField(blank=True, null=True)),
                ('isreversal', models.TextField(blank=True, null=True)),
                ('lastmodifiedby', models.TextField(blank=True, null=True)),
                ('ordpicked', models.TextField(blank=True, null=True)),
                ('paymenthold', models.TextField(blank=True, null=True)),
                ('posting', models.TextField(blank=True, null=True)),
                ('postingperiod', models.TextField(blank=True, null=True)),
                ('printedpickingticket', models.TextField(blank=True, null=True)),
                ('recordtype', models.TextField(blank=True, null=True)),
                ('source', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('terms', models.TextField(blank=True, null=True)),
                ('tobeprinted', models.TextField(blank=True, null=True)),
                ('trandisplayname', models.TextField(blank=True, null=True)),
                ('tranid', models.TextField(blank=True, null=True)),
                ('transactionnumber', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('userevenuearrangement', models.TextField(blank=True, null=True)),
                ('visibletocustomer', models.TextField(blank=True, null=True)),
                ('void_field', models.TextField(blank=True, null=True)),
                ('voided', models.TextField(blank=True, null=True)),
                ('custbody_nexus_notc', models.TextField(blank=True, null=True)),
                ('custbody_rpc_payment_approved', models.TextField(blank=True, null=True)),
                ('custbody_rpc_same_reference_number', models.TextField(blank=True, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('source_uri', models.TextField(blank=True, null=True)),
                ('closedate', models.DateField(blank=True, null=True)),
                ('createddate', models.DateField(blank=True, null=True)),
                ('duedate', models.DateField(blank=True, null=True)),
                ('trandate', models.DateField(blank=True, null=True)),
                ('custbody_report_timestamp', models.DateTimeField(blank=True, null=True)),
                ('record_date', models.DateTimeField(blank=True, null=True)),
                ('customtype', models.BigIntegerField(blank=True, null=True)),
                ('daysopen', models.BigIntegerField(blank=True, null=True)),
                ('daysoverduesearch', models.BigIntegerField(blank=True, null=True)),
                ('exchangerate', models.FloatField(blank=True, null=True)),
                ('foreignamountpaid', models.FloatField(blank=True, null=True)),
                ('foreignamountunpaid', models.FloatField(blank=True, null=True)),
                ('number', models.DecimalField(blank=True, decimal_places=20, max_digits=50, null=True)),
                ('nexus', models.BigIntegerField(blank=True, null=True)),
                ('consolidation_key', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteTransformedTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('consolidation_key', models.IntegerField(null=True)),
                ('transactionid', models.CharField(max_length=50, null=True)),
                ('abbrevtype', models.CharField(max_length=255, null=True)),
                ('approvalstatus', models.CharField(max_length=255, null=True)),
                ('number', models.DecimalField(blank=True, decimal_places=20, max_digits=50, null=True)),
                ('source', models.CharField(max_length=255, null=True)),
                ('status', models.CharField(max_length=255, null=True)),
                ('trandisplayname', models.CharField(max_length=255, null=True)),
                ('tranid', models.CharField(max_length=255, null=True)),
                ('transactionnumber', models.CharField(max_length=255, null=True)),
                ('type', models.CharField(max_length=255, null=True)),
                ('recordtype', models.CharField(max_length=255, null=True)),
                ('createdby', models.CharField(max_length=255, null=True)),
                ('createddate', models.DateField(null=True)),
                ('lastmodifiedby', models.CharField(max_length=255, null=True)),
                ('lastmodifieddate', models.DateField(null=True)),
                ('postingperiod', models.CharField(max_length=255, null=True)),
                ('yearperiod', models.IntegerField(null=True)),
                ('trandate', models.DateField(null=True)),
                ('subsidiary', models.CharField(max_length=255, null=True)),
                ('subsidiaryfullname', models.CharField(max_length=255, null=True)),
                ('subsidiaryid', models.CharField(max_length=255, null=True)),
                ('department', models.CharField(max_length=255, null=True)),
                ('departmentid', models.CharField(max_length=255, null=True)),
                ('linesequencenumber', models.IntegerField(null=True)),
                ('lineid', models.CharField(max_length=255, null=True)),
                ('location', models.CharField(max_length=255, null=True)),
                ('clas', models.CharField(max_length=255, null=True)),
                ('linenmemo', models.TextField(null=True)),
                ('memo', models.TextField(null=True)),
                ('externalid', models.CharField(max_length=255, null=True)),
                ('entity_id', models.CharField(max_length=255, null=True)),
                ('entity_title', models.CharField(max_length=255, null=True)),
                ('legal_name', models.CharField(max_length=255, null=True)),
                ('parent_entity', models.CharField(max_length=255, null=True)),
                ('entity_email', models.EmailField(max_length=254, null=True)),
                ('entity_phone', models.CharField(max_length=255, null=True)),
                ('terms', models.CharField(max_length=255, null=True)),
                ('daysopen', models.IntegerField(null=True)),
                ('daysoverduesearch', models.IntegerField(null=True)),
                ('duedate', models.DateField(null=True)),
                ('closedate', models.DateField(null=True)),
                ('account', models.CharField(max_length=255, null=True)),
                ('acctnumber', models.CharField(max_length=255, null=True)),
                ('accountsearchdisplayname', models.CharField(max_length=255, null=True)),
                ('expenseaccount', models.CharField(max_length=255, null=True)),
                ('expenseaccountid', models.CharField(max_length=255, null=True)),
                ('accttype', models.CharField(max_length=255, null=True)),
                ('displaynamewithhierarchy', models.CharField(max_length=255, null=True)),
                ('fullname', models.CharField(max_length=255, null=True)),
                ('sspecacct', models.CharField(max_length=255, null=True)),
                ('accountinglinetype', models.CharField(max_length=255, null=True)),
                ('lineclosedate', models.DateField(null=True)),
                ('documentnumber', models.CharField(max_length=255, null=True)),
                ('iscclosed', models.CharField(max_length=50, null=True)),
                ('linelastmodifieddate', models.DateField(null=True)),
                ('mainline', models.CharField(max_length=50, null=True)),
                ('taxline', models.CharField(max_length=255, null=True)),
                ('transactiondiscount', models.CharField(max_length=255, null=True)),
                ('billingstatus', models.CharField(max_length=255, null=True)),
                ('accountingbook', models.CharField(max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('amountlinked', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('debit', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('credit', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('netamount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('linenetamount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('paymentamountunused', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('paymentamountused', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('posting_field', models.CharField(max_length=255, null=True)),
                ('amountpaid', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('amountunpaid', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('custbody_report_timestamp', models.DateTimeField(null=True)),
                ('currency', models.CharField(max_length=3, null=True)),
                ('exchangerate', models.DecimalField(decimal_places=6, max_digits=19, null=True)),
                ('foreignamountpaid', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('foreignamountunpaid', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('foreigntotal', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('foreignlineamount', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('record_date', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NetSuiteVendors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(blank=True, null=True)),
                ('vendor_id', models.CharField(max_length=255, null=True)),
                ('entity_id', models.CharField(max_length=255, null=True)),
                ('is_person', models.BooleanField(null=True)),
                ('is_inactive', models.BooleanField(null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('phone', models.CharField(max_length=255, null=True)),
                ('currency', models.CharField(max_length=3, null=True)),
                ('subsidiary', models.CharField(max_length=255, null=True)),
                ('terms', models.CharField(max_length=255, null=True)),
                ('record_date', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SyncTableLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=255)),
                ('integration', models.CharField(choices=[('XERO', 'Xero'), ('NETSUITE', 'NetSuite'), ('TOAST', 'Toast'), ('OTHER', 'Other')], default='XERO', max_length=50)),
                ('fetched_records', models.IntegerField()),
                ('last_updated_time', models.DateTimeField()),
                ('last_updated_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='ToastCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('check_guid', models.CharField(db_index=True, max_length=255)),
                ('display_number', models.CharField(blank=True, max_length=100, null=True)),
                ('net_sales', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('service_charge_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('discount_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('check_refund', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('opened_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('closed_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_type', models.CharField(blank=True, max_length=100, null=True)),
                ('last_modified_device_id', models.CharField(blank=True, max_length=100, null=True)),
                ('void_date', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('opened_by', models.CharField(blank=True, max_length=255, null=True)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('applied_loyalty_info', models.JSONField(blank=True, null=True)),
                ('voided', models.BooleanField(blank=True, null=True)),
                ('payment_status', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('tab_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tax_exempt', models.BooleanField(blank=True, null=True)),
                ('tax_exemption_account', models.CharField(blank=True, max_length=100, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastDaySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('guid', models.CharField(db_index=True, max_length=255, unique=True)),
                ('property_name', models.CharField(db_index=True, max_length=255)),
                ('open_time', models.TimeField(blank=True, null=True)),
                ('close_time', models.TimeField(blank=True, null=True)),
                ('schedule_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastDiningOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('restaurant_guid', models.CharField(db_index=True, max_length=255)),
                ('option_guid', models.CharField(db_index=True, max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('entity_type', models.CharField(blank=True, max_length=100, null=True)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('behavior', models.CharField(blank=True, max_length=50, null=True)),
                ('curbside', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ToastGeneralLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('guid', models.CharField(db_index=True, max_length=255, unique=True)),
                ('general_name', models.CharField(db_index=True, max_length=255)),
                ('location_name', models.CharField(blank=True, max_length=255, null=True)),
                ('location_code', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('closeout_hour', models.TimeField(blank=True, null=True)),
                ('management_group_guid', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=10, null=True)),
                ('first_business_date', models.DateField(blank=True, null=True)),
                ('archived', models.BooleanField(db_index=True, default=False)),
                ('url_website', models.URLField(blank=True, null=True)),
                ('url_facebook', models.URLField(blank=True, null=True)),
                ('url_twitter', models.URLField(blank=True, null=True)),
                ('url_order_online', models.URLField(blank=True, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state_code', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastJoinedOpeningHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('monday_start_time', models.TimeField(blank=True, null=True)),
                ('monday_end_time', models.TimeField(blank=True, null=True)),
                ('monday_overnight', models.BooleanField(default=False)),
                ('monday_related_day_schedule', models.CharField(blank=True, max_length=255, null=True)),
                ('tuesday_start_time', models.TimeField(blank=True, null=True)),
                ('tuesday_end_time', models.TimeField(blank=True, null=True)),
                ('tuesday_overnight', models.BooleanField(default=False)),
                ('tuesday_related_day_schedule', models.CharField(blank=True, max_length=255, null=True)),
                ('wednesday_start_time', models.TimeField(blank=True, null=True)),
                ('wednesday_end_time', models.TimeField(blank=True, null=True)),
                ('wednesday_overnight', models.BooleanField(default=False)),
                ('wednesday_related_day_schedule', models.CharField(blank=True, max_length=255, null=True)),
                ('thursday_start_time', models.TimeField(blank=True, null=True)),
                ('thursday_end_time', models.TimeField(blank=True, null=True)),
                ('thursday_overnight', models.BooleanField(default=False)),
                ('thursday_related_day_schedule', models.CharField(blank=True, max_length=255, null=True)),
                ('friday_start_time', models.TimeField(blank=True, null=True)),
                ('friday_end_time', models.TimeField(blank=True, null=True)),
                ('friday_overnight', models.BooleanField(default=False)),
                ('friday_related_day_schedule', models.CharField(blank=True, max_length=255, null=True)),
                ('saturday_start_time', models.TimeField(blank=True, null=True)),
                ('saturday_end_time', models.TimeField(blank=True, null=True)),
                ('saturday_overnight', models.BooleanField(default=False)),
                ('saturday_related_day_schedule', models.CharField(blank=True, max_length=255, null=True)),
                ('sunday_start_time', models.TimeField(blank=True, null=True)),
                ('sunday_end_time', models.TimeField(blank=True, null=True)),
                ('sunday_overnight', models.BooleanField(default=False)),
                ('sunday_related_day_schedule', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastOrder',
            fields=[
                ('order_guid', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('restaurant_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('payload', models.JSONField(help_text='Raw order data from Toast')),
                ('order_net_sales', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('import_id', models.IntegerField(help_text='Reference to the integration ID')),
                ('ws_import_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('created_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('closed_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('toast_sales', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_refunds', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('refund_business_date', models.IntegerField(blank=True, null=True)),
                ('tip', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('service_charges', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('discount_count', models.IntegerField(default=0)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_type', models.CharField(blank=True, max_length=100, null=True)),
                ('revenue_center_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('server_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('created_in_test_mode', models.BooleanField(blank=True, null=True)),
                ('display_number', models.CharField(blank=True, max_length=100, null=True)),
                ('last_modified_device_id', models.CharField(blank=True, max_length=100, null=True)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('void_date', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('business_date', models.IntegerField(blank=True, null=True)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('restaurant_service_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('excess_food', models.BooleanField(blank=True, null=True)),
                ('voided', models.BooleanField(blank=True, null=True)),
                ('deleted', models.BooleanField(blank=True, null=True)),
                ('estimated_fulfillment_date', models.DateTimeField(blank=True, null=True)),
                ('table_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('required_prep_time', models.CharField(blank=True, max_length=50, null=True)),
                ('approval_status', models.CharField(blank=True, max_length=50, null=True)),
                ('delivery_info', models.JSONField(blank=True, null=True)),
                ('service_area_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('curbside_pickup_info', models.JSONField(blank=True, null=True)),
                ('number_of_guests', models.IntegerField(blank=True, null=True)),
                ('dining_option', models.CharField(blank=True, max_length=100, null=True)),
                ('applied_packaging_info', models.JSONField(blank=True, null=True)),
                ('opened_date', models.DateTimeField(blank=True, null=True)),
                ('void_business_date', models.CharField(blank=True, max_length=50, null=True)),
                ('payments', models.JSONField(blank=True, help_text='Raw payment data from Toast', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_guid', models.CharField(db_index=True, max_length=255)),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('order_guid', models.CharField(db_index=True, max_length=255)),
                ('restaurant_guid', models.CharField(db_index=True, max_length=255)),
                ('check_guid', models.CharField(db_index=True, max_length=255)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('tip_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('card_type', models.CharField(blank=True, max_length=50, null=True)),
                ('last4_digits', models.CharField(blank=True, max_length=10, null=True)),
                ('paid_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('paid_business_date', models.IntegerField(blank=True, null=True)),
                ('refund_status', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_status', models.CharField(blank=True, max_length=50, null=True)),
                ('card_entry_mode', models.CharField(blank=True, max_length=50, null=True)),
                ('server_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('created_device_id', models.CharField(blank=True, max_length=100, null=True)),
                ('last_modified_device_id', models.CharField(blank=True, max_length=100, null=True)),
                ('raw_payload', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastRestaurantService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('restaurant_guid', models.CharField(db_index=True, max_length=255)),
                ('service_guid', models.CharField(db_index=True, max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('entity_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastRevenueCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('restaurant_guid', models.CharField(db_index=True, max_length=255)),
                ('revenue_center_guid', models.CharField(db_index=True, max_length=255)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('entity_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastSalesCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('restaurant_guid', models.CharField(db_index=True, max_length=255)),
                ('category_guid', models.CharField(db_index=True, max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('entity_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('order_guid', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('selection_guid', models.CharField(db_index=True, max_length=255)),
                ('display_name', models.CharField(max_length=255)),
                ('pre_discount_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('discount_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('net_sales', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('quantity', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('voided', models.BooleanField(db_index=True, default=False)),
                ('business_date', models.IntegerField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('entity_type', models.CharField(blank=True, max_length=100, null=True)),
                ('deferred', models.BooleanField(blank=True, null=True)),
                ('void_reason', models.JSONField(blank=True, null=True)),
                ('option_group', models.JSONField(blank=True, null=True)),
                ('modifiers', models.JSONField(blank=True, null=True)),
                ('seat_number', models.IntegerField(blank=True, null=True)),
                ('fulfillment_status', models.CharField(blank=True, max_length=100, null=True)),
                ('option_group_pricing_mode', models.CharField(blank=True, max_length=100, null=True)),
                ('gift_card_selection_info', models.JSONField(blank=True, null=True)),
                ('sales_category_guid', models.CharField(blank=True, max_length=255, null=True)),
                ('split_origin', models.CharField(blank=True, max_length=255, null=True)),
                ('selection_type', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('applied_taxes', models.JSONField(blank=True, null=True)),
                ('stored_value_transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('item_group', models.JSONField(blank=True, null=True)),
                ('item', models.JSONField(blank=True, null=True)),
                ('tax_inclusion', models.CharField(blank=True, max_length=50, null=True)),
                ('receipt_line_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('unit_of_measure', models.CharField(blank=True, max_length=50, null=True)),
                ('refund_details', models.JSONField(blank=True, null=True)),
                ('toast_gift_card', models.JSONField(blank=True, null=True)),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('dining_option', models.CharField(blank=True, max_length=100, null=True)),
                ('void_business_date', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('pre_modifier', models.JSONField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastServiceArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('restaurant_guid', models.CharField(db_index=True, max_length=255)),
                ('area_guid', models.CharField(db_index=True, max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('entity_type', models.CharField(blank=True, max_length=100, null=True)),
                ('revenue_center_guid', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ToastWeeklySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.IntegerField(db_index=True)),
                ('monday', models.CharField(blank=True, max_length=255, null=True)),
                ('tuesday', models.CharField(blank=True, max_length=255, null=True)),
                ('wednesday', models.CharField(blank=True, max_length=255, null=True)),
                ('thursday', models.CharField(blank=True, max_length=255, null=True)),
                ('friday', models.CharField(blank=True, max_length=255, null=True)),
                ('saturday', models.CharField(blank=True, max_length=255, null=True)),
                ('sunday', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='XeroAccountsRaw',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tenant_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('account_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_date_utc', models.DateTimeField(blank=True, null=True)),
                ('raw_payload', models.JSONField(blank=True, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Xero Account Raw',
            },
        ),
        migrations.CreateModel(
            name='XeroBankTransactionsRaw',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bank_transaction_id', models.CharField(db_index=True, max_length=255)),
                ('tenant_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('updated_date_utc', models.DateTimeField(blank=True, null=True)),
                ('raw_payload', models.JSONField(blank=True, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Xero Bank Transaction Raw',
            },
        ),
        migrations.CreateModel(
            name='XeroBudgetPeriodBalancesAnalytics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tenant_id', models.CharField(max_length=255)),
                ('tenant_name', models.CharField(max_length=255)),
                ('budget_id', models.CharField(max_length=255)),
                ('budget_name', models.CharField(max_length=255)),
                ('budget_status', models.CharField(max_length=255)),
                ('budget_type', models.CharField(max_length=255)),
                ('account_id', models.CharField(max_length=255)),
                ('account_code', models.CharField(blank=True, max_length=255, null=True)),
                ('account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_status', models.CharField(blank=True, max_length=255, null=True)),
                ('account_tax_type', models.CharField(blank=True, max_length=255, null=True)),
                ('account_class', models.CharField(blank=True, max_length=255, null=True)),
                ('account_reporting_code', models.CharField(blank=True, max_length=255, null=True)),
                ('account_reporting_code_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_category_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_category_option', models.CharField(blank=True, max_length=255, null=True)),
                ('period', models.CharField(max_length=255)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('updated_date_utc', models.DateTimeField(blank=True, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Xero Budget Period Balances Analytics',
            },
        ),
        migrations.CreateModel(
            name='XeroBudgetPeriodBalancesRaw',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tenant_id', models.CharField(db_index=True, max_length=255)),
                ('budget_id', models.CharField(db_index=True, max_length=255)),
                ('account_id', models.CharField(db_index=True, max_length=255)),
                ('account_code', models.CharField(blank=True, max_length=255, null=True)),
                ('account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('reporting_code', models.CharField(blank=True, max_length=255, null=True)),
                ('reporting_code_name', models.CharField(blank=True, max_length=255, null=True)),
                ('period', models.CharField(db_index=True, max_length=255)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('updated_date_utc', models.DateTimeField(blank=True, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=50, null=True)),
                ('tracking_category_id', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_category_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_category_option', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Xero Budget Period Balances Raw',
            },
        ),
        migrations.CreateModel(
            name='XeroBudgetsRaw',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('budget_id', models.CharField(db_index=True, max_length=255)),
                ('tenant_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('updated_date_utc', models.DateTimeField(blank=True, null=True)),
                ('raw_payload', models.JSONField(blank=True, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Xero Budgets Raw',
            },
        ),
        migrations.CreateModel(
            name='XeroContactsRaw',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_id', models.CharField(db_index=True, max_length=255)),
                ('tenant_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('updated_date_utc', models.DateTimeField(blank=True, null=True)),
                ('raw_payload', models.JSONField(blank=True, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Xero Contacts Raw',
            },
        ),
        migrations.CreateModel(
            name='XeroInvoiceLineItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True)),
                ('unit_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('account_code', models.CharField(blank=True, max_length=50, null=True)),
                ('line_item_id', models.CharField(db_index=True, max_length=50)),
                ('tenant_id', models.CharField(db_index=True, max_length=50)),
                ('account_id', models.CharField(blank=True, max_length=50, null=True)),
                ('line_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('tax_type', models.CharField(blank=True, max_length=50, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('amount_due', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('amount_credited', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('currency_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('is_discounted', models.BooleanField(default=False)),
                ('has_attachments', models.BooleanField(default=False)),
                ('has_errors', models.BooleanField(default=False)),
                ('contact_id', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('line_amount_types', models.CharField(blank=True, max_length=50, null=True)),
                ('sub_total', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('updated_date_utc', models.DateTimeField(blank=True, null=True)),
                ('fully_paid_on_date', models.DateTimeField(blank=True, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Xero Invoice Line Item',
            },
        ),
        migrations.CreateModel(
            name='XeroInvoicesRaw',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('invoice_id', models.CharField(db_index=True, max_length=255)),
                ('invoice_number', models.CharField(blank=True, max_length=255, null=True)),
                ('tenant_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('updated_date_utc', models.DateTimeField(blank=True, null=True)),
                ('fully_paid_on_date', models.DateTimeField(blank=True, null=True)),
                ('raw_payload', models.JSONField(blank=True, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Xero Invoices Raw',
            },
        ),
        migrations.CreateModel(
            name='XeroJournalLines',
            fields=[
                ('journal_line_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('journal_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('journal_number', models.CharField(blank=True, max_length=50, null=True)),
                ('tenant_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('reference', models.TextField(blank=True, null=True)),
                ('source_id', models.CharField(blank=True, max_length=50, null=True)),
                ('source_type', models.CharField(blank=True, max_length=50, null=True)),
                ('account_id', models.CharField(blank=True, max_length=50, null=True)),
                ('account_code', models.CharField(blank=True, max_length=50, null=True)),
                ('account_type', models.CharField(blank=True, max_length=50, null=True)),
                ('account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('net_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('gross_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('journal_date', models.DateField(blank=True, db_index=True, null=True)),
                ('created_date_utc', models.DateTimeField(blank=True, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=50, null=True)),
                ('tracking_category_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tracking_category_option', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Xero Journal Line',
            },
        ),
        migrations.CreateModel(
            name='XeroJournalLineTrackingCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('line_item_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('journal_line_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('tracking_category_id', models.CharField(blank=True, db_index=True, max_length=50, null=True)),
                ('tracking_option_id', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('option', models.CharField(blank=True, max_length=255, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Xero Journal Line Tracking Category',
            },
        ),
        migrations.CreateModel(
            name='XeroJournalsRaw',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('journal_id', models.CharField(db_index=True, max_length=255, null=True)),
                ('journal_number', models.IntegerField(null=True)),
                ('tenant_id', models.CharField(db_index=True, max_length=255, null=True)),
                ('reference', models.TextField(blank=True, null=True)),
                ('source_id', models.CharField(blank=True, max_length=255, null=True)),
                ('source_type', models.CharField(blank=True, max_length=255, null=True)),
                ('journal_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created_date_utc', models.DateTimeField(blank=True, null=True)),
                ('raw_payload', models.JSONField(blank=True, null=True)),
                ('ingestion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('source_system', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Xero Journals Raw',
            },
        ),
        migrations.AddIndex(
            model_name='xerojournalsraw',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__2a14cc_idx'),
        ),
        migrations.AddIndex(
            model_name='xerojournalsraw',
            index=models.Index(fields=['journal_id'], name='integration_journal_a7d8bb_idx'),
        ),
        migrations.AddIndex(
            model_name='xerojournalsraw',
            index=models.Index(fields=['journal_date'], name='integration_journal_5181f9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='xerojournalsraw',
            unique_together={('tenant_id', 'journal_id')},
        ),
        migrations.AddIndex(
            model_name='xerojournallinetrackingcategories',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__c00ed6_idx'),
        ),
        migrations.AddIndex(
            model_name='xerojournallinetrackingcategories',
            index=models.Index(fields=['journal_line_id'], name='integration_journal_04dec5_idx'),
        ),
        migrations.AddIndex(
            model_name='xerojournallinetrackingcategories',
            index=models.Index(fields=['line_item_id'], name='integration_line_it_0b69e9_idx'),
        ),
        migrations.AddIndex(
            model_name='xerojournallinetrackingcategories',
            index=models.Index(fields=['tracking_category_id'], name='integration_trackin_148051_idx'),
        ),
        migrations.AddIndex(
            model_name='xerojournallines',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__953333_idx'),
        ),
        migrations.AddIndex(
            model_name='xerojournallines',
            index=models.Index(fields=['journal_line_id'], name='integration_journal_938233_idx'),
        ),
        migrations.AddIndex(
            model_name='xerojournallines',
            index=models.Index(fields=['journal_date'], name='integration_journal_33324b_idx'),
        ),
        migrations.AddIndex(
            model_name='xeroinvoicesraw',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__0e43de_idx'),
        ),
        migrations.AddIndex(
            model_name='xeroinvoicesraw',
            index=models.Index(fields=['invoice_id'], name='integration_invoice_91e291_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='xeroinvoicesraw',
            unique_together={('tenant_id', 'invoice_id')},
        ),
        migrations.AddIndex(
            model_name='xeroinvoicelineitems',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__89fb15_idx'),
        ),
        migrations.AddIndex(
            model_name='xeroinvoicelineitems',
            index=models.Index(fields=['line_item_id'], name='integration_line_it_cd670e_idx'),
        ),
        migrations.AddIndex(
            model_name='xeroinvoicelineitems',
            index=models.Index(fields=['invoice_id'], name='integration_invoice_5bd3d8_idx'),
        ),
        migrations.AddIndex(
            model_name='xerocontactsraw',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__df3983_idx'),
        ),
        migrations.AddIndex(
            model_name='xerocontactsraw',
            index=models.Index(fields=['contact_id'], name='integration_contact_bfc184_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='xerocontactsraw',
            unique_together={('tenant_id', 'contact_id')},
        ),
        migrations.AddField(
            model_name='xerobudgetsraw',
            name='tenant_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xero_budgets_raws', to='integrations.organisation'),
        ),
        migrations.AddField(
            model_name='xerobudgetperiodbalancesraw',
            name='tenant_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xero_budget_period_balances_raws', to='integrations.organisation'),
        ),
        migrations.AlterUniqueTogether(
            name='xerobudgetperiodbalancesanalytics',
            unique_together={('tenant_id', 'budget_id', 'account_id', 'period')},
        ),
        migrations.AddIndex(
            model_name='xerobanktransactionsraw',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__39c715_idx'),
        ),
        migrations.AddIndex(
            model_name='xerobanktransactionsraw',
            index=models.Index(fields=['bank_transaction_id'], name='integration_bank_tr_3a824a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='xerobanktransactionsraw',
            unique_together={('tenant_id', 'bank_transaction_id')},
        ),
        migrations.AddIndex(
            model_name='xeroaccountsraw',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__22466f_idx'),
        ),
        migrations.AddIndex(
            model_name='xeroaccountsraw',
            index=models.Index(fields=['account_id'], name='integration_account_7cc3ca_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='xeroaccountsraw',
            unique_together={('tenant_id', 'account_id')},
        ),
        migrations.AddField(
            model_name='toastweeklyschedule',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='toastweeklyschedule',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.toastgenerallocation'),
        ),
        migrations.AddField(
            model_name='toastservicearea',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='toastselection',
            name='toast_check',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selections', to='integrations.toastcheck'),
        ),
        migrations.AddField(
            model_name='toastsalescategory',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='toastrevenuecenter',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='toastrestaurantservice',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='toastpayment',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toast_payments', to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='toastorder',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toast_orders', to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='toastjoinedopeninghours',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='toastjoinedopeninghours',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.toastgenerallocation'),
        ),
        migrations.AddIndex(
            model_name='toastgenerallocation',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__7a6bcf_idx'),
        ),
        migrations.AddIndex(
            model_name='toastgenerallocation',
            index=models.Index(fields=['general_name'], name='integration_general_6173cc_idx'),
        ),
        migrations.AddIndex(
            model_name='toastgenerallocation',
            index=models.Index(fields=['archived'], name='integration_archive_816fa2_idx'),
        ),
        migrations.AddIndex(
            model_name='toastgenerallocation',
            index=models.Index(fields=['management_group_guid'], name='integration_managem_03dc25_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastgenerallocation',
            unique_together={('tenant_id', 'guid')},
        ),
        migrations.AddField(
            model_name='toastdiningoption',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='toastdayschedule',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='toastdayschedule',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.toastgenerallocation'),
        ),
        migrations.AddField(
            model_name='toastcheck',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checks', to='integrations.toastorder'),
        ),
        migrations.AddField(
            model_name='synctablelogs',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.organisation'),
        ),
        migrations.AlterUniqueTogether(
            name='netsuitetransformedtransaction',
            unique_together={('tenant_id', 'transactionid', 'linesequencenumber')},
        ),
        migrations.AddIndex(
            model_name='netsuitetransactions',
            index=models.Index(fields=['tenant_id', 'transactionid'], name='integration_tenant__050ecb_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitetransactions',
            index=models.Index(fields=['tenant_id', 'lastmodifieddate'], name='integration_tenant__a8fcc5_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitetransactionline',
            index=models.Index(fields=['tenant_id', 'transaction_line_id'], name='integration_tenant__70478a_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitetransactionline',
            index=models.Index(fields=['uniquekey'], name='integration_uniquek_048cfd_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitetransactionaccountingline',
            index=models.Index(fields=['tenant_id', 'transaction', 'transaction_line'], name='integration_tenant__7c29e4_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitetransactionaccountingline',
            index=models.Index(fields=['lastmodifieddate'], name='integration_lastmod_5c5c30_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitetransactionaccountingline',
            index=models.Index(fields=['consolidation_key'], name='integration_consoli_269a42_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitetransactionaccountingline',
            index=models.Index(fields=['account'], name='integration_account_8daf6a_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitelocations',
            index=models.Index(fields=['tenant_id', 'location_id'], name='integration_tenant__c3607e_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitelocations',
            index=models.Index(fields=['last_modified_date'], name='integration_last_mo_2b35cf_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitejournals',
            index=models.Index(fields=['tenant_id', 'journal_id'], name='integration_tenant__3eab18_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitejournals',
            index=models.Index(fields=['date'], name='integration_date_dacd6a_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitejournals',
            index=models.Index(fields=['account'], name='integration_account_ed3a91_idx'),
        ),
        migrations.AddConstraint(
            model_name='netsuitejournals',
            constraint=models.UniqueConstraint(fields=('tenant_id', 'journal_id'), name='unique_journal_entry'),
        ),
        migrations.AddIndex(
            model_name='netsuiteentity',
            index=models.Index(fields=['tenant_id', 'entity_id'], name='integration_tenant__e7f582_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuiteentity',
            index=models.Index(fields=['last_modified_date'], name='integration_last_mo_beb1d6_idx'),
        ),
        migrations.AddIndex(
            model_name='netsuitebudgets',
            index=models.Index(fields=['tenant_id', 'budget_id'], name='integration_tenant__8a1377_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='netsuitebudgetperiodbalances',
            unique_together={('tenant_id', 'budget_id', 'account_id', 'period')},
        ),
        migrations.AddIndex(
            model_name='netsuiteaccounts',
            index=models.Index(fields=['tenant_id', 'account_id'], name='integration_tenant__a7d48c_idx'),
        ),
        migrations.AddField(
            model_name='integrationaccesstoken',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_tokens', to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='integration',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='integrations.organisation'),
        ),
        migrations.AddField(
            model_name='integration',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations_org', to='integrations.organisation'),
        ),
        migrations.AddField(
            model_name='highprioritytask',
            name='integration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integrations.integration'),
        ),
        migrations.AddIndex(
            model_name='xerobudgetsraw',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__a37cec_idx'),
        ),
        migrations.AddIndex(
            model_name='xerobudgetsraw',
            index=models.Index(fields=['budget_id'], name='integration_budget__763ec3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='xerobudgetsraw',
            unique_together={('tenant_id', 'budget_id')},
        ),
        migrations.AddIndex(
            model_name='xerobudgetperiodbalancesraw',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__a11ab9_idx'),
        ),
        migrations.AddIndex(
            model_name='xerobudgetperiodbalancesraw',
            index=models.Index(fields=['budget_id'], name='integration_budget__8325c2_idx'),
        ),
        migrations.AddIndex(
            model_name='xerobudgetperiodbalancesraw',
            index=models.Index(fields=['account_id'], name='integration_account_08675c_idx'),
        ),
        migrations.AddIndex(
            model_name='xerobudgetperiodbalancesraw',
            index=models.Index(fields=['period'], name='integration_period_488042_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='xerobudgetperiodbalancesraw',
            unique_together={('tenant_id', 'budget_id', 'account_id', 'period')},
        ),
        migrations.AddIndex(
            model_name='toastweeklyschedule',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__886d67_idx'),
        ),
        migrations.AddIndex(
            model_name='toastweeklyschedule',
            index=models.Index(fields=['integration'], name='integration_integra_fe166d_idx'),
        ),
        migrations.AddIndex(
            model_name='toastweeklyschedule',
            index=models.Index(fields=['restaurant'], name='integration_restaur_c43616_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastweeklyschedule',
            unique_together={('tenant_id', 'restaurant')},
        ),
        migrations.AddIndex(
            model_name='toastservicearea',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__a6a0ee_idx'),
        ),
        migrations.AddIndex(
            model_name='toastservicearea',
            index=models.Index(fields=['integration'], name='integration_integra_5e33da_idx'),
        ),
        migrations.AddIndex(
            model_name='toastservicearea',
            index=models.Index(fields=['restaurant_guid'], name='integration_restaur_34bebe_idx'),
        ),
        migrations.AddIndex(
            model_name='toastservicearea',
            index=models.Index(fields=['revenue_center_guid'], name='integration_revenue_8a3771_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastservicearea',
            unique_together={('tenant_id', 'area_guid')},
        ),
        migrations.AddIndex(
            model_name='toastselection',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__0f188e_idx'),
        ),
        migrations.AddIndex(
            model_name='toastselection',
            index=models.Index(fields=['toast_check'], name='integration_toast_c_92232a_idx'),
        ),
        migrations.AddIndex(
            model_name='toastselection',
            index=models.Index(fields=['selection_guid'], name='integration_selecti_17ff8d_idx'),
        ),
        migrations.AddIndex(
            model_name='toastselection',
            index=models.Index(fields=['voided'], name='integration_voided_ccdc41_idx'),
        ),
        migrations.AddIndex(
            model_name='toastselection',
            index=models.Index(fields=['business_date'], name='integration_busines_ff2a42_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastselection',
            unique_together={('tenant_id', 'selection_guid')},
        ),
        migrations.AddIndex(
            model_name='toastsalescategory',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__0d00a6_idx'),
        ),
        migrations.AddIndex(
            model_name='toastsalescategory',
            index=models.Index(fields=['integration'], name='integration_integra_4fa5fe_idx'),
        ),
        migrations.AddIndex(
            model_name='toastsalescategory',
            index=models.Index(fields=['restaurant_guid'], name='integration_restaur_23b9f0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastsalescategory',
            unique_together={('tenant_id', 'category_guid')},
        ),
        migrations.AddIndex(
            model_name='toastrevenuecenter',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__2f7ea7_idx'),
        ),
        migrations.AddIndex(
            model_name='toastrevenuecenter',
            index=models.Index(fields=['integration'], name='integration_integra_311df1_idx'),
        ),
        migrations.AddIndex(
            model_name='toastrevenuecenter',
            index=models.Index(fields=['restaurant_guid'], name='integration_restaur_485cf3_idx'),
        ),
        migrations.AddIndex(
            model_name='toastrevenuecenter',
            index=models.Index(fields=['revenue_center_guid'], name='integration_revenue_5a6ba0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastrevenuecenter',
            unique_together={('tenant_id', 'revenue_center_guid')},
        ),
        migrations.AddIndex(
            model_name='toastrestaurantservice',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__5d3276_idx'),
        ),
        migrations.AddIndex(
            model_name='toastrestaurantservice',
            index=models.Index(fields=['integration'], name='integration_integra_545940_idx'),
        ),
        migrations.AddIndex(
            model_name='toastrestaurantservice',
            index=models.Index(fields=['restaurant_guid'], name='integration_restaur_30c56c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastrestaurantservice',
            unique_together={('tenant_id', 'service_guid')},
        ),
        migrations.AddIndex(
            model_name='toastpayment',
            index=models.Index(fields=['tenant_id', 'order_guid'], name='integration_tenant__32a224_idx'),
        ),
        migrations.AddIndex(
            model_name='toastpayment',
            index=models.Index(fields=['tenant_id', 'restaurant_guid'], name='integration_tenant__2c4728_idx'),
        ),
        migrations.AddIndex(
            model_name='toastpayment',
            index=models.Index(fields=['tenant_id', 'paid_business_date'], name='integration_tenant__f033db_idx'),
        ),
        migrations.AddIndex(
            model_name='toastpayment',
            index=models.Index(fields=['tenant_id', 'payment_status'], name='integration_tenant__6aebb3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastpayment',
            unique_together={('tenant_id', 'payment_guid')},
        ),
        migrations.AddIndex(
            model_name='toastorder',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__5a302d_idx'),
        ),
        migrations.AddIndex(
            model_name='toastorder',
            index=models.Index(fields=['integration'], name='integration_integra_4a0f37_idx'),
        ),
        migrations.AddIndex(
            model_name='toastorder',
            index=models.Index(fields=['ws_import_date'], name='integration_ws_impo_637707_idx'),
        ),
        migrations.AddIndex(
            model_name='toastorder',
            index=models.Index(fields=['created_date'], name='integration_created_3c57d2_idx'),
        ),
        migrations.AddIndex(
            model_name='toastorder',
            index=models.Index(fields=['closed_date'], name='integration_closed__bda0e9_idx'),
        ),
        migrations.AddIndex(
            model_name='toastorder',
            index=models.Index(fields=['modified_date'], name='integration_modifie_177ae2_idx'),
        ),
        migrations.AddIndex(
            model_name='toastorder',
            index=models.Index(fields=['payments'], name='integration_payment_1ff56e_idx'),
        ),
        migrations.AddIndex(
            model_name='toastjoinedopeninghours',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__08aff7_idx'),
        ),
        migrations.AddIndex(
            model_name='toastjoinedopeninghours',
            index=models.Index(fields=['integration'], name='integration_integra_388502_idx'),
        ),
        migrations.AddIndex(
            model_name='toastjoinedopeninghours',
            index=models.Index(fields=['restaurant'], name='integration_restaur_bb7e69_idx'),
        ),
        migrations.AddIndex(
            model_name='toastjoinedopeninghours',
            index=models.Index(fields=['monday_start_time', 'monday_end_time'], name='integration_monday__ba0b52_idx'),
        ),
        migrations.AddIndex(
            model_name='toastjoinedopeninghours',
            index=models.Index(fields=['tuesday_start_time', 'tuesday_end_time'], name='integration_tuesday_cd439a_idx'),
        ),
        migrations.AddIndex(
            model_name='toastjoinedopeninghours',
            index=models.Index(fields=['wednesday_start_time', 'wednesday_end_time'], name='integration_wednesd_f6ccde_idx'),
        ),
        migrations.AddIndex(
            model_name='toastjoinedopeninghours',
            index=models.Index(fields=['thursday_start_time', 'thursday_end_time'], name='integration_thursda_293bc7_idx'),
        ),
        migrations.AddIndex(
            model_name='toastjoinedopeninghours',
            index=models.Index(fields=['friday_start_time', 'friday_end_time'], name='integration_friday__559ae9_idx'),
        ),
        migrations.AddIndex(
            model_name='toastjoinedopeninghours',
            index=models.Index(fields=['saturday_start_time', 'saturday_end_time'], name='integration_saturda_966ebd_idx'),
        ),
        migrations.AddIndex(
            model_name='toastjoinedopeninghours',
            index=models.Index(fields=['sunday_start_time', 'sunday_end_time'], name='integration_sunday__22de99_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastjoinedopeninghours',
            unique_together={('tenant_id', 'restaurant')},
        ),
        migrations.AddIndex(
            model_name='toastdiningoption',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__91d1ab_idx'),
        ),
        migrations.AddIndex(
            model_name='toastdiningoption',
            index=models.Index(fields=['integration'], name='integration_integra_0cd608_idx'),
        ),
        migrations.AddIndex(
            model_name='toastdiningoption',
            index=models.Index(fields=['restaurant_guid'], name='integration_restaur_5e0551_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastdiningoption',
            unique_together={('tenant_id', 'option_guid')},
        ),
        migrations.AddIndex(
            model_name='toastdayschedule',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__fb88f2_idx'),
        ),
        migrations.AddIndex(
            model_name='toastdayschedule',
            index=models.Index(fields=['integration'], name='integration_integra_ff1ece_idx'),
        ),
        migrations.AddIndex(
            model_name='toastdayschedule',
            index=models.Index(fields=['restaurant'], name='integration_restaur_a14d87_idx'),
        ),
        migrations.AddIndex(
            model_name='toastdayschedule',
            index=models.Index(fields=['property_name'], name='integration_propert_92dbdf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='toastdayschedule',
            unique_together={('tenant_id', 'guid')},
        ),
        migrations.AddIndex(
            model_name='toastcheck',
            index=models.Index(fields=['tenant_id'], name='integration_tenant__7fcf0a_idx'),
        ),
        migrations.AddIndex(
            model_name='toastcheck',
            index=models.Index(fields=['order'], name='integration_order_i_af179e_idx'),
        ),
        migrations.AddIndex(
            model_name='toastcheck',
            index=models.Index(fields=['check_guid'], name='integration_check_g_66e03a_idx'),
        ),
        migrations.AddIndex(
            model_name='toastcheck',
            index=models.Index(fields=['opened_date'], name='integration_opened__551ae6_idx'),
        ),
        migrations.AddIndex(
            model_name='toastcheck',
            index=models.Index(fields=['closed_date'], name='integration_closed__4ebf21_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='integration',
            unique_together={('organisation', 'integration_type')},
        ),
    ]
